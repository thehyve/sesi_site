<?php
/**
 * When this module is enabled, it configures the drupal menu to look like the tree below. Any other links are disabled.
 * If there is no page that corresponds to a menu item it will be created.
 */

function sesi_default_menus_enable() {

  $menus = array(
    'Organisatie' => array(
      'Doelstellingen',
      'Geschiedenis',
      'Samenwerkingsovereenkomst',
      'Struktuur',
      'Internationaal kader',
      'Workshops',
      'Contact',
    ),
    'Biobank' /*Vlaamse Biobank*/ => array(
      'Ethisch legaal kader',
      'Inter-academische Kwaliteitsborging',
      'Infrastructuur en data management',
      'Aanvraag procedure',
      array('Variabelen', 'variable-search'),
      array('Vlaamse biobank catalogus', 'datasets'),
    ),
    'Translationeel onderzoek' => array(
      'Thematische domeinen',
      'Onderzoeksplatformen',
      'Samenwerking met industrie',
      'Valorisatie',
      array('Studies', 'studies'),
      array('Translationeel onderzoeksplatformen', 'community_by_dataset'),
    ),
    'Donors' /*Donor informatie*/ => array(
      'Privacy en rechten',
      'Vaak gestelde vragen',
      'PatiÃ«nten organisaties',
      'Donatie menselijk lichaams materiaal',
    ),
    'Nieuws & events' /*Nieuws en events*/ => array(
      array('Nieuws', 'news'),
      array('Events', 'events'),
      array('Kalender', 'calendar-field-event-date/year'),
    ),
  );

  _sesi_default_menus_create_nodes($menus);
  _sesi_default_menus_create_menus($menus);
}

/*
 * Implements hook_form_FORM_ID_alter
 */
function sesi_default_menus_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $form['search_block_form']['#size'] = 10;
}

function _sesi_default_menus_create_nodes($menus) {
  $nids = array();

  foreach($menus as $key => $val) {
    $alias = _sesi_default_menus_alias($key);
    if(drupal_get_normal_path($alias) === $alias) {
      $nids[] = _sesi_default_menus_create_node($key);
    }

    foreach($val as $item) {
      if(is_array($item)) continue;
      $alias = _sesi_default_menus_alias($item);
      if(drupal_get_normal_path($alias) === $alias) {
        $nids[] = _sesi_default_menus_create_node($item);
      }
    }
  }

  return $nids;
}

function _sesi_default_menus_create_node($name, $parent=NULL) {
  $node = array(
    'type' => 'page',
    'uid' => 1,
    'status' => 1,
    'comment' => 1,
    'promote' => 0,
    'sticky' => 0);

  $node = entity_create('node', $node);
  $node->field_hide_title = array();
  $wrapper = entity_metadata_wrapper('node', $node);
  $wrapper->title->set($name);
  $wrapper->save();

  $nid = $wrapper->getIdentifier();

  return $nid;
}

function _sesi_default_menus_create_menus($menus) {

  $menu_template = array(
    'menu_name' => 'main-menu',
    'router_path' => 'node/%',
    'module' => 'menu',
    'hidden' => 0,
    'external' => 0,
    'expanded' => 1,
  );

  $weight = 0;

  $menu_tree = menu_tree_all_data('main-menu');
  $seen_menus = array();

  foreach($menus as $key => $val) {
    $alias = _sesi_default_menus_alias($key);
    $path = drupal_get_normal_path($alias);
    if($path === $alias) {
      continue;
    }

    $weight++;

    $menu = _sesi_default_menus_find_menu($menu_tree, $path, $key);
    if($menu) {
      $plid = $menu['mlid'];
    } else {
      $has_children = (is_array($val) && count($val)) ? 1 : 0;
      $menu = $menu_template + array(
        'link_path' => $path,
        'link_title' => $key,
        'has_children' => $has_children,
        'weight' => $weight,
      );

      $plid = menu_link_save($menu);
    }
    $seen_menus[$plid] = 1;

    foreach($val as $item) {
      if(is_array($item)) {
        list($item, $path) = $item;
      } else {
        $alias = _sesi_default_menus_alias($item);
        $path = drupal_get_normal_path($alias);
        if($path === $alias) {
          // Page doesn't exist
          continue;
        }
      }

      $weight++;

      $menu = _sesi_default_menus_find_menu($menu_tree, $item, $path, $plid);
      if($menu) {
        $mlid = $menu['mlid'];
      } else {
        $menu = $menu_template + array(
          'link_path' => $path,
          'link_title' => $item,
          'has_children' => 0,
          'plid' => $plid,
          'weight' => $weight,
        );
        $mlid = menu_link_save($menu);
      }
      $seen_menus[$mlid] = 1;
    }
  }
  _sesi_default_menus_enable($menu_tree, $seen_menus);
}

function _sesi_default_menus_alias($name) {
  $loaded = &drupal_static(__FUNCTION__);
  if(!$loaded) {
    module_load_include('inc', 'pathauto');
    $loaded = TRUE;
  }

  $slug = pathauto_cleanstring($name);
  return "content/$slug";

}

function _sesi_default_menus_find_menu($menu, $name, $path, $parent_mlid=NULL) {

  if(isset($parent_mlid)) {
    foreach($menu as $key => $sub) {
      if($sub['link']['mlid'] == $parent_mlid) {
        unset($parent_mlid);
        $menu = $sub['below'];
        break;
      }
    }
    if(isset($parent_mlid)) return NULL;
  }

  foreach($menu as $key => $sub) {
    if($sub['link']['link_title'] == $name && $sub['link']['link_path'] == $path) {
      return $sub['link'];
    }
  }
  return NULL;
}

/*
 * Enable all used menus, and disable all not used menus
 */
function _sesi_default_menus_enable($menu, $used_links) {
  if(empty($menu)) return;

  foreach($menu as $sub) {
    $link = $sub['link'];
    if(!empty($used_links[$link['mlid']])) {
      _sesi_default_menus_enable($sub['below'], $used_links);
      if($link['hidden']) {
        $link['hidden'] = 0;
        menu_link_save($link);
      }
    } elseif(!$link['hidden']) {
      $link['hidden'] = 1;
      menu_link_save($link);
    }
  }
}


function _sesi_default_menus_delete_all_disabled_menus($menu=NULL, $_also_visible=FALSE) {
  if($menu === NULL) {
    $menu = menu_tree_all_data('main-menu');
  }

  foreach($menu as $key => $sub) {
    if($sub['link']['hidden'] || $_also_visible) {
      if(count($sub['below'])) {
        _sesi_default_menus_delete_all_disabled_menus($sub['below'], TRUE);
      }
      menu_link_delete($sub['link']['mlid']);
    }
  }
}

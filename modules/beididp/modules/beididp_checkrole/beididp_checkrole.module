<?php

/**
 * @file
 * Contains the code to force selected roles to log in using the Belgian
 * eID card.
 */

module_load_include('inc', 'beididp_checkrole');

/**
 * Implements hook_menu().
 */
function beididp_checkrole_menu() {
  $items = array();

  $items['admin/config/beididp/checkrole'] = array(
    'title' => 'Role checks',
    'description' => 'Select roles for which eID authentication is required',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_module_form', 'beididp_checkrole'),
    'access arguments' => array('administer beididp'),
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter() for user_profile_form().
 *
 * Prevents that drupal admin locks himself out when eID login is required.
 * @see beididp_checkrole_user_profile_validate()
 */
function beididp_checkrole_form_user_profile_form_alter(&$form, &$form_state) {
  $form['#validate'][] = 'beididp_checkrole_user_profile_validate';
}

/**
 * Form validation handler for user_profile_form().
 */
function beididp_checkrole_user_profile_validate($form, &$form_state) {
  if ($form_state['user']->uid == 1) {
    $keys = array_filter($form_state['values']['roles']);
    if (beididp_checkrole_would_lock_user_new_roles(1, $keys)) {
      form_set_error('user_profile_form', t('The administrator has a role that would require eID login, but the account does not have an eID. Not saved.'));
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter() for beididp_eid_delete_form().
 *
 * Prevents that drupal admin locks himself out when eID login is required.
 * @see beididp_checkrole_eid_delete_form_validate()
 */
function beididp_checkrole_form_beididp_eid_delete_form_alter(&$form, &$form_state) {
  $form['#validate'] = array('beididp_checkrole_eid_delete_form_validate');
}

/**
 * Form validation handler for beididp_eid_delete_form().
 */
function beididp_checkrole_eid_delete_form_validate($form, &$form_state) {
  if ($form_state['build_info']['args'][0]->uid == 1) {
    if (beididp_checkrole_would_lock_user_delete(1)) {
      form_set_error('beididp_delete_form', t('The administrator account has a role that would require eID login, but he does not have an eID. Not deleted.'));
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter() for user_login().
 */
function beididp_checkrole_form_user_login_alter(&$form, &$form_state) {
  _beididp_checkrole_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter() for user_login_block().
 */
function beididp_checkrole_form_user_login_block_alter(&$form, &$form_state) {
  _beididp_checkrole_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter() for user_pass().
 *
 * Prevents eID-only users to reset and receive a password.
 */
function beididp_checkrole_form_user_pass_alter(&$form, &$form_state) {
  _beididp_checkrole_form_alter($form, $form_state);
}


/**
 * Adds custom validator to login forms.
 */
function _beididp_checkrole_form_alter(&$form, &$form_state) {
  // Only check if user did NOT click on the eID button.
  if (empty($form_state['post']['eid']) && empty($form_state['post']['eid_x'])) {
    array_unshift($form['#validate'], 'beididp_checkrole_login_validate');
  }
}


/**
 * Validates login or password reset request.
 *
 * Checks if the user has a role for which the eID-card is mandatory.
 */
function beididp_checkrole_login_validate($form, &$form_state) {
  $name = check_plain($form_state['values']['name']);
  $user = valid_email_address($name) ? user_load_by_mail($name) : user_load_by_name($name);

  if ($user) {
    $required = beididp_checkrole_eid_rids();

    foreach ($user->roles as $rid => $name) {
      if (in_array($rid, $required)) {
        form_set_error('name', t("Role '@role' requires you to log in via eID.", array('@role' => $name)));
      }
    }
  }
}

<?php

define("ORIGINAL_FORM", false);

ctools_include('ajax');
ctools_include('modal');

module_load_include('inc', 'mica_query', 'mica_query.pages.term');
module_load_include('inc', 'query_interface', 'query_interface.edit_screen');
module_load_include('inc', 'query_interface', 'query_interface.handling_terms');
module_load_include('inc', 'query_interface', 'query_interface.taxonomy_tree');
module_load_include('inc', 'query_interface', 'query_interface.results_screen');

/**
 * Registers urls specific for new query interface 
 * Implements hook_menu().
 */
function query_interface_menu() {
    $items = array();
    
    // This URL is used when a new query term is added, but when no term object exists yet
    // The user can access this screen whenever he has access to the query
    $items['sesi/%ctools_js/node/%node/queries/%mica_query/term/%node/add'] = array(
        'title' => 'Edit',
        'access callback' => '_mica_datasets_query_access',
        'access arguments' => array(3, 5, 'update'),
        'page callback' => 'query_interface_add_query_term_modal_page', 
        'page arguments' => array(1, 3, 5, 7, 9),
        'type' => MENU_CALLBACK
    );
    
    // This URL is used to edit a term from the query screen
    $items['sesi/%ctools_js/node/%node/queries/%mica_query/term/%mica_query_term/edit'] = array(
        'title' => 'Edit',
        'access callback' => '_mica_datasets_query_term_access',
        'access arguments' => array(3, 5, 7, 'update'),
        'page callback' => 'query_interface_query_term_edit_modal_page',
        'page arguments' => array(1, 3, 5, 7, 9),
        'type' => MENU_CALLBACK,
        'file' => 'query_interface.handling_terms.inc',
    );
    
    // This URL is used to retrieve the taxonomy tree for a given dataset
    // using ajax
    $items['sesi/node/%node/queries/%mica_query/taxonomy'] = array(
        'title' => 'Taxonomy',
        'access callback' => '_mica_datasets_query_access',
        'access arguments' => array(2, 4, 'update'),
        'page callback' => 'query_interface_taxonomy_tree', 
        'page arguments' => array(2),
        'delivery callback' => 'drupal_json_output',
    );
    
    return $items;
}